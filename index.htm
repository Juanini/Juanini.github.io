<!DOCTYPE html>
<html lang="en">
    <head>
		<title>MiniGame Separar Basura</title>
		<meta charset="utf-8">
		<meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0">
		<link type="text/css" rel="stylesheet" href="main.css">
	</head>

    <style>
    body{
        margin: 0;
        }
    </style>

    <body>

        <div id="container"></div>
        <div id="info">
			<!-- <a href="https://threejs.org" target="_blank" rel="noopener">three.js</a> - sprites -->
			<h1 id="StatusInfo">Nivel 1</h1>
            <p id="puntosLabel" style="text-align:left; font-size:300%;">PUNTOS: </p>
            <p id="vidasLabel" style="text-align:left; font-size:300%;">VIDAS: </p>
		</div>
        <!-- <script> src="./index.js"</script> -->
        <!-- <h1>Hola 2</h1> -->

        <div id="overlay">
            <div id="text" style="font-size:400%;">GAME OVER</div>
            <button>Intentar de nuevo</button>
        </div>

        <script type="x-shader/x-vertex" id="vertexShader">

			varying vec3 vWorldPosition;

			void main() {

				vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
				vWorldPosition = worldPosition.xyz;

				gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );

			}

		</script>

		<script type="x-shader/x-fragment" id="fragmentShader">

			uniform vec3 topColor;
			uniform vec3 bottomColor;
			uniform float offset;
			uniform float exponent;

			varying vec3 vWorldPosition;

			void main() {

				float h = normalize( vWorldPosition + offset ).y;
				gl_FragColor = vec4( mix( bottomColor, topColor, max( pow( max( h , 0.0), exponent ), 0.0 ) ), 1.0 );

			}

		</script>

        <script type="module" src="./index.js"> </script>
    </body>
</html>
